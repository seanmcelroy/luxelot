// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: prepare_download.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Luxelot.Apps.FserveApp.Messages {

  /// <summary>Holder for reflection information generated from prepare_download.proto</summary>
  public static partial class PrepareDownloadReflection {

    #region Descriptor
    /// <summary>File descriptor for prepare_download.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PrepareDownloadReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZwcmVwYXJlX2Rvd25sb2FkLnByb3RvItABCg9QcmVwYXJlRG93bmxvYWQS",
            "DAoEZmlsZRgBIAEoCRIWCg51c2VfZW5jcnlwdGlvbhgCIAEoCBIWCg51c2Vf",
            "ZGlyZWN0X3VkcBgDIAEoCBIYChBkaXJlY3RfdWRwX2FkZHIxGAQgASgHEhgK",
            "EGRpcmVjdF91ZHBfYWRkcjIYBSABKAcSGAoQZGlyZWN0X3VkcF9hZGRyMxgG",
            "IAEoBxIYChBkaXJlY3RfdWRwX2FkZHI0GAcgASgHEhcKD2RpcmVjdF91ZHBf",
            "cG9ydBgIIAEoBUIiqgIfTHV4ZWxvdC5BcHBzLkZzZXJ2ZUFwcC5NZXNzYWdl",
            "c2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Luxelot.Apps.FserveApp.Messages.PrepareDownload), global::Luxelot.Apps.FserveApp.Messages.PrepareDownload.Parser, new[]{ "File", "UseEncryption", "UseDirectUdp", "DirectUdpAddr1", "DirectUdpAddr2", "DirectUdpAddr3", "DirectUdpAddr4", "DirectUdpPort" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PrepareDownload : pb::IMessage<PrepareDownload>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PrepareDownload> _parser = new pb::MessageParser<PrepareDownload>(() => new PrepareDownload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PrepareDownload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Luxelot.Apps.FserveApp.Messages.PrepareDownloadReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PrepareDownload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PrepareDownload(PrepareDownload other) : this() {
      file_ = other.file_;
      useEncryption_ = other.useEncryption_;
      useDirectUdp_ = other.useDirectUdp_;
      directUdpAddr1_ = other.directUdpAddr1_;
      directUdpAddr2_ = other.directUdpAddr2_;
      directUdpAddr3_ = other.directUdpAddr3_;
      directUdpAddr4_ = other.directUdpAddr4_;
      directUdpPort_ = other.directUdpPort_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PrepareDownload Clone() {
      return new PrepareDownload(this);
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 1;
    private string file_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string File {
      get { return file_; }
      set {
        file_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "use_encryption" field.</summary>
    public const int UseEncryptionFieldNumber = 2;
    private bool useEncryption_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseEncryption {
      get { return useEncryption_; }
      set {
        useEncryption_ = value;
      }
    }

    /// <summary>Field number for the "use_direct_udp" field.</summary>
    public const int UseDirectUdpFieldNumber = 3;
    private bool useDirectUdp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseDirectUdp {
      get { return useDirectUdp_; }
      set {
        useDirectUdp_ = value;
      }
    }

    /// <summary>Field number for the "direct_udp_addr1" field.</summary>
    public const int DirectUdpAddr1FieldNumber = 4;
    private uint directUdpAddr1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DirectUdpAddr1 {
      get { return directUdpAddr1_; }
      set {
        directUdpAddr1_ = value;
      }
    }

    /// <summary>Field number for the "direct_udp_addr2" field.</summary>
    public const int DirectUdpAddr2FieldNumber = 5;
    private uint directUdpAddr2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DirectUdpAddr2 {
      get { return directUdpAddr2_; }
      set {
        directUdpAddr2_ = value;
      }
    }

    /// <summary>Field number for the "direct_udp_addr3" field.</summary>
    public const int DirectUdpAddr3FieldNumber = 6;
    private uint directUdpAddr3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DirectUdpAddr3 {
      get { return directUdpAddr3_; }
      set {
        directUdpAddr3_ = value;
      }
    }

    /// <summary>Field number for the "direct_udp_addr4" field.</summary>
    public const int DirectUdpAddr4FieldNumber = 7;
    private uint directUdpAddr4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DirectUdpAddr4 {
      get { return directUdpAddr4_; }
      set {
        directUdpAddr4_ = value;
      }
    }

    /// <summary>Field number for the "direct_udp_port" field.</summary>
    public const int DirectUdpPortFieldNumber = 8;
    private int directUdpPort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DirectUdpPort {
      get { return directUdpPort_; }
      set {
        directUdpPort_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PrepareDownload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PrepareDownload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (File != other.File) return false;
      if (UseEncryption != other.UseEncryption) return false;
      if (UseDirectUdp != other.UseDirectUdp) return false;
      if (DirectUdpAddr1 != other.DirectUdpAddr1) return false;
      if (DirectUdpAddr2 != other.DirectUdpAddr2) return false;
      if (DirectUdpAddr3 != other.DirectUdpAddr3) return false;
      if (DirectUdpAddr4 != other.DirectUdpAddr4) return false;
      if (DirectUdpPort != other.DirectUdpPort) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (File.Length != 0) hash ^= File.GetHashCode();
      if (UseEncryption != false) hash ^= UseEncryption.GetHashCode();
      if (UseDirectUdp != false) hash ^= UseDirectUdp.GetHashCode();
      if (DirectUdpAddr1 != 0) hash ^= DirectUdpAddr1.GetHashCode();
      if (DirectUdpAddr2 != 0) hash ^= DirectUdpAddr2.GetHashCode();
      if (DirectUdpAddr3 != 0) hash ^= DirectUdpAddr3.GetHashCode();
      if (DirectUdpAddr4 != 0) hash ^= DirectUdpAddr4.GetHashCode();
      if (DirectUdpPort != 0) hash ^= DirectUdpPort.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (File.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(File);
      }
      if (UseEncryption != false) {
        output.WriteRawTag(16);
        output.WriteBool(UseEncryption);
      }
      if (UseDirectUdp != false) {
        output.WriteRawTag(24);
        output.WriteBool(UseDirectUdp);
      }
      if (DirectUdpAddr1 != 0) {
        output.WriteRawTag(37);
        output.WriteFixed32(DirectUdpAddr1);
      }
      if (DirectUdpAddr2 != 0) {
        output.WriteRawTag(45);
        output.WriteFixed32(DirectUdpAddr2);
      }
      if (DirectUdpAddr3 != 0) {
        output.WriteRawTag(53);
        output.WriteFixed32(DirectUdpAddr3);
      }
      if (DirectUdpAddr4 != 0) {
        output.WriteRawTag(61);
        output.WriteFixed32(DirectUdpAddr4);
      }
      if (DirectUdpPort != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(DirectUdpPort);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (File.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(File);
      }
      if (UseEncryption != false) {
        output.WriteRawTag(16);
        output.WriteBool(UseEncryption);
      }
      if (UseDirectUdp != false) {
        output.WriteRawTag(24);
        output.WriteBool(UseDirectUdp);
      }
      if (DirectUdpAddr1 != 0) {
        output.WriteRawTag(37);
        output.WriteFixed32(DirectUdpAddr1);
      }
      if (DirectUdpAddr2 != 0) {
        output.WriteRawTag(45);
        output.WriteFixed32(DirectUdpAddr2);
      }
      if (DirectUdpAddr3 != 0) {
        output.WriteRawTag(53);
        output.WriteFixed32(DirectUdpAddr3);
      }
      if (DirectUdpAddr4 != 0) {
        output.WriteRawTag(61);
        output.WriteFixed32(DirectUdpAddr4);
      }
      if (DirectUdpPort != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(DirectUdpPort);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (File.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(File);
      }
      if (UseEncryption != false) {
        size += 1 + 1;
      }
      if (UseDirectUdp != false) {
        size += 1 + 1;
      }
      if (DirectUdpAddr1 != 0) {
        size += 1 + 4;
      }
      if (DirectUdpAddr2 != 0) {
        size += 1 + 4;
      }
      if (DirectUdpAddr3 != 0) {
        size += 1 + 4;
      }
      if (DirectUdpAddr4 != 0) {
        size += 1 + 4;
      }
      if (DirectUdpPort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DirectUdpPort);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PrepareDownload other) {
      if (other == null) {
        return;
      }
      if (other.File.Length != 0) {
        File = other.File;
      }
      if (other.UseEncryption != false) {
        UseEncryption = other.UseEncryption;
      }
      if (other.UseDirectUdp != false) {
        UseDirectUdp = other.UseDirectUdp;
      }
      if (other.DirectUdpAddr1 != 0) {
        DirectUdpAddr1 = other.DirectUdpAddr1;
      }
      if (other.DirectUdpAddr2 != 0) {
        DirectUdpAddr2 = other.DirectUdpAddr2;
      }
      if (other.DirectUdpAddr3 != 0) {
        DirectUdpAddr3 = other.DirectUdpAddr3;
      }
      if (other.DirectUdpAddr4 != 0) {
        DirectUdpAddr4 = other.DirectUdpAddr4;
      }
      if (other.DirectUdpPort != 0) {
        DirectUdpPort = other.DirectUdpPort;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            File = input.ReadString();
            break;
          }
          case 16: {
            UseEncryption = input.ReadBool();
            break;
          }
          case 24: {
            UseDirectUdp = input.ReadBool();
            break;
          }
          case 37: {
            DirectUdpAddr1 = input.ReadFixed32();
            break;
          }
          case 45: {
            DirectUdpAddr2 = input.ReadFixed32();
            break;
          }
          case 53: {
            DirectUdpAddr3 = input.ReadFixed32();
            break;
          }
          case 61: {
            DirectUdpAddr4 = input.ReadFixed32();
            break;
          }
          case 64: {
            DirectUdpPort = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            File = input.ReadString();
            break;
          }
          case 16: {
            UseEncryption = input.ReadBool();
            break;
          }
          case 24: {
            UseDirectUdp = input.ReadBool();
            break;
          }
          case 37: {
            DirectUdpAddr1 = input.ReadFixed32();
            break;
          }
          case 45: {
            DirectUdpAddr2 = input.ReadFixed32();
            break;
          }
          case 53: {
            DirectUdpAddr3 = input.ReadFixed32();
            break;
          }
          case 61: {
            DirectUdpAddr4 = input.ReadFixed32();
            break;
          }
          case 64: {
            DirectUdpPort = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
